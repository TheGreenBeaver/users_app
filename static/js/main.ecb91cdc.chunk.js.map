{"version":3,"sources":["actions/AuthorizationActions.js","components/UsersList.js","components/Authorization.js","actions/Types.js","reducers/AuthorizationReducer.js","reducers/RootReducer.js","Store.js","App.js","index.js"],"names":["enterUserData","dataType","userData","type","payload","UsersList","Component","connect","storeState","token","authState","Authorization","logIn","props","username","password","authorize","onChange","e","target","value","id","placeholder","name","onClick","dispatch","console","log","$","ajax","data","JSON","stringify","headers","success","initialState","combineReducers","state","action","store","createStore","rootReducer","applyMiddleware","thunk","App","src","alt","ReactDOM","render","document","getElementById"],"mappings":"oRA0BaA,EAAgB,SAACC,EAAUC,GACpC,MAAO,CACHC,KAAMF,EACNG,QAASF,ICzBXG,G,6KAGE,OACI,kC,GAJYC,cAkBTC,eAJS,SAAAC,GAAU,MAAK,CACnCC,MAAOD,EAAWE,UAAUD,SAGQ,GAAzBF,CAA6BF,GCbtCM,E,4MAoCFC,MAAQ,WAAO,IAAD,EACqB,EAAKC,MAA5BC,EADE,EACFA,SAAUC,EADR,EACQA,SAClB,EAAKF,MAAMG,UAAUF,EAAUC,I,EAGnCE,SAAW,SAAChB,EAAUiB,GAClB,IAAMhB,EAAYgB,EAAEC,OAAOC,MAC3BpB,EAAcC,EAAUC,I,uDAzClB,IAAD,OAEL,OACI,yBACImB,GAAG,gBAGH,2BACIlB,KAAK,OACLmB,YAAY,WACZC,KAAK,WACLN,SAAU,SAAAC,GAAC,OAAI,EAAKD,SCtBV,iBDsBmCC,MAGjD,2BACIf,KAAK,WACLmB,YAAY,WACZC,KAAK,WACLN,SAAU,SAAAC,GAAC,OAAI,EAAKD,SC5BV,iBD4BmCC,MAIjD,4BACIM,QAAS,kBAAM,EAAKZ,UADxB,UAMA,kBAAC,EAAD,W,GA9BYN,aA2DbC,eALS,SAAAC,GAAU,MAAK,CACnCM,SAAUN,EAAWM,SACrBC,SAAUP,EAAWO,YAGe,CAAEC,UFjEjB,SAACF,EAAUC,GAAX,OAAwB,SAAAU,GAC7CC,QAAQC,IAAIb,EAAW,IAAMC,GAC7Ba,IAAEC,KACE,iEACA,CACI1B,KAAM,OACN2B,KAAMC,KAAKC,UAAU,CACjBlB,SAAUA,EACVC,SAAUA,IAEdkB,QAAS,CACL,eAAgB,oBAEpBC,QAAS,SAAAJ,GACLL,EAAS,CACLtB,KGhBK,YHiBLC,QAAS0B,EAAKrB,aEiDmBT,iBAAtCO,CAAuDI,G,sBElEhEwB,EAAe,CACjBrB,SAAU,GACVC,SAAU,GACVN,MAAO,ICFI2B,cAAgB,CAC3B1B,UDIW,WAAyC,IAA/B2B,EAA8B,uDAAtBF,EAAcG,EAAQ,uCACnD,OAAQA,EAAOnC,MACX,IDVsB,iBCWlB,OAAO,2BACAkC,GADP,IAEIvB,SAAUwB,EAAOlC,UAEzB,IDdsB,iBCelB,OAAO,2BACAiC,GADP,IAEItB,SAAUuB,EAAOlC,UAEzB,IDlBiB,YCmBb,OAAO,2BACAiC,GADP,IAEI5B,MAAO6B,EAAOlC,UAEtB,QACI,OAAOiC,MEpBNE,EAAQC,YACjBC,EAHiB,GAKjBC,YAAgBC,M,MCiBLC,MAnBf,WACI,OACI,kBAAC,IAAD,CAAUL,MAAOA,GACb,yBACIlB,GAAG,kBAEH,yBACIA,GAAG,OACHwB,IAAI,yHACJC,IAAI,SAGR,kBAAC,EAAD,SCfhBC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.ecb91cdc.chunk.js","sourcesContent":["import { SET_TOKEN } from \"./Types\";\r\nimport $ from 'jquery'\r\n\r\nexport const authorize = (username, password) => dispatch => {\r\n    console.log(username + ' ' + password);\r\n    $.ajax(\r\n        'http://emphasoft-test-assignment.herokuapp.com/api-token-auth/',\r\n        {\r\n            type: 'POST',\r\n            data: JSON.stringify({\r\n                username: username,\r\n                password: password\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            success: data => {\r\n                dispatch({\r\n                    type: SET_TOKEN,\r\n                    payload: data.token\r\n                })\r\n            }\r\n        }\r\n    )\r\n};\r\n\r\nexport const enterUserData = (dataType, userData) => {\r\n    return {\r\n        type: dataType,\r\n        payload: userData\r\n    }\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass UsersList extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUsersList.propTypes = {\r\n    token: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = storeState => ({\r\n    token: storeState.authState.token\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(UsersList);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from \"react-redux\";\r\nimport { authorize, enterUserData } from \"../actions/AuthorizationActions\";\r\nimport { ENTER_PASSWORD, ENTER_USERNAME } from '../actions/Types'\r\nimport '../resources/styles/Authorization.css'\r\nimport UsersList from \"./UsersList\";\r\n\r\n\r\nclass Authorization extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div\r\n                id='auth-wrapper'\r\n            >\r\n\r\n                <input\r\n                    type='text'\r\n                    placeholder='username'\r\n                    name='username'\r\n                    onChange={e => this.onChange(ENTER_USERNAME, e)}\r\n                />\r\n\r\n                <input\r\n                    type='password'\r\n                    placeholder='password'\r\n                    name='password'\r\n                    onChange={e => this.onChange(ENTER_PASSWORD, e)}\r\n                />\r\n\r\n\r\n                <button\r\n                    onClick={() => this.logIn()}\r\n                >\r\n                    Log In\r\n                </button>\r\n\r\n                <UsersList/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    logIn = () => {\r\n        const { username, password } = this.props;\r\n        this.props.authorize(username, password);\r\n    };\r\n\r\n    onChange = (dataType, e) => {\r\n        const userData =  e.target.value;\r\n        enterUserData(dataType, userData)\r\n    }\r\n}\r\n\r\nAuthorization.propTypes = {\r\n    authorize: PropTypes.func.isRequired,\r\n    enterUserData: PropTypes.func.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    password: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = storeState => ({\r\n    username: storeState.username,\r\n    password: storeState.password\r\n});\r\n\r\nexport default connect(mapStateToProps, { authorize, enterUserData })(Authorization);","export const ENTER_USERNAME = 'ENTER_USERNAME';\r\nexport const ENTER_PASSWORD = 'ENTER_PASSWORD';\r\nexport const SET_TOKEN = 'SET_TOKEN';\r\n","import { SET_TOKEN, ENTER_PASSWORD, ENTER_USERNAME } from \"../actions/Types\";\r\n\r\nconst initialState = {\r\n    username: '',\r\n    password: '',\r\n    token: ''\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ENTER_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.payload\r\n            };\r\n        case ENTER_PASSWORD:\r\n            return {\r\n                ...state,\r\n                password: action.payload\r\n            };\r\n        case SET_TOKEN:\r\n            return {\r\n                ...state,\r\n                token: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport authorizationReducer from './AuthorizationReducer'\r\n\r\nexport default combineReducers({\r\n    authState: authorizationReducer\r\n})\r\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from './reducers/RootReducer'\r\n\r\nconst initialState = {};\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    applyMiddleware(thunk)\r\n);","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport Authorization from \"./components/Authorization\";\nimport UsersList from \"./components/UsersList\";\nimport { store } from './Store'\nimport '../src/resources/styles/Main.css'\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div\n                id='main-container'\n            >\n                <img\n                    id='logo'\n                    src='https://raw.githubusercontent.com/TheGreenBeaver/ImgStorage/4b1beb035a7db28d9ea803129695e146d5c3a20b/usersApp/logo.svg'\n                    alt='logo'\n                />\n\n                <Authorization />\n\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}