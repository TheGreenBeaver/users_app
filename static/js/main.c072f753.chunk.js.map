{"version":3,"sources":["components/Authorization.js","components/UsersList.js","actions/AuthorizationActions.js","actions/Types.js","reducers/RootReducer.js","reducers/TokenReducer.js","Store.js","App.js","index.js"],"names":["Authorization","logIn","props","authorize","type","name","onClick","context","store","Component","UsersList","connect","dispatch","$","ajax","data","JSON","stringify","username","password","headers","success","payload","token","this","storeState","combineReducers","state","action","createStore","rootReducer","applyMiddleware","thunk","App","id","src","alt","ReactDOM","render","document","getElementById"],"mappings":"+PAMMA,E,4MA6CFC,MAAQ,WACJ,EAAKC,MAAMC,a,uDA5CL,IAAD,OAEL,OACI,6BAEI,wCAEA,6BAEI,4CAIA,2BACIC,KAAK,OACLC,KAAK,cAKb,6BAEI,4CAIA,2BACID,KAAK,WACLC,KAAK,cAKb,4BACIC,QAAS,kBAAM,EAAKL,MAAM,EAAKM,QAAQC,SAD3C,e,GAnCYC,aCFtBC,GDwDSC,YAAQ,KAAM,CAAER,UEzDN,kBAAM,SAAAS,GAC3BC,IAAEC,KACE,iEACA,CACIV,KAAM,OACNW,KAAMC,KAAKC,UAAU,CACjBC,SAAU,aACVC,SAAU,qBAEdC,QAAS,CACL,eAAgB,oBAEpBC,QAAS,SAAAN,GACLH,EAAS,CACLR,KCfK,YDgBLkB,QAASP,EAAKQ,cF0CnBZ,CAA6BX,G,uKCrDpC,OACI,6BACKwB,KAAKtB,MAAMqB,W,GALJd,c,GAmBTE,aAJS,SAAAc,GAAU,MAAK,CACnCF,MAAOE,EAAWF,SAGkB,GAAzBZ,CAA6BD,G,cGpB7BgB,cAAgB,CAC3BH,MCFW,WAA+B,IAArBI,EAAoB,uDAAZ,GAAIC,EAAQ,uCACzC,OAAQA,EAAOxB,MACX,IFFiB,YEGb,OAAOwB,EAAON,QAClB,QACI,OAAOK,MCDNnB,EAAQqB,YACjBC,EAHiB,GAKjBC,YAAgBC,M,MCaLC,MAff,WACI,OACI,kBAAC,IAAD,CAAUzB,MAAOA,GACb,yBACI0B,GAAG,kBAEH,yBACIC,IAAI,gCACJC,IAAI,YCXxBC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c072f753.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from \"react-redux\";\r\nimport { authorize } from \"../actions/AuthorizationActions\";\r\n\r\n\r\nclass Authorization extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <h1>UsersApp</h1>\r\n\r\n                <div>\r\n\r\n                    <label>\r\n                        Username:\r\n                    </label>\r\n\r\n                    <input\r\n                        type='text'\r\n                        name='username'\r\n                    />\r\n\r\n                </div>\r\n\r\n                <div>\r\n\r\n                    <label>\r\n                        Password:\r\n                    </label>\r\n\r\n                    <input\r\n                        type='password'\r\n                        name='password'\r\n                    />\r\n\r\n                </div>\r\n\r\n                <button\r\n                    onClick={() => this.logIn(this.context.store)}\r\n                >\r\n                    Log In\r\n                </button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    logIn = () => {\r\n        this.props.authorize();\r\n    }\r\n}\r\n\r\nAuthorization.propTypes = {\r\n    authorize: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { authorize })(Authorization);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass UsersList extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.token}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUsersList.propTypes = {\r\n    token: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = storeState => ({\r\n    token: storeState.token\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(UsersList);","import { ENTER_USERNAME, ENTER_PASSWORD, SET_TOKEN } from \"./Types\";\r\nimport $ from 'jquery'\r\n\r\nexport const authorize = () => dispatch => {\r\n    $.ajax(\r\n        'http://emphasoft-test-assignment.herokuapp.com/api-token-auth/',\r\n        {\r\n            type: 'POST',\r\n            data: JSON.stringify({\r\n                username: 'test_super',\r\n                password: 'Nf<U4f<rDbtDxAPn'\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            success: data => {\r\n                dispatch({\r\n                    type: SET_TOKEN,\r\n                    payload: data.token\r\n                })\r\n            }\r\n        }\r\n    )\r\n};","export const ENTER_USERNAME = 'ENTER_USERNAME';\r\nexport const ENTER_PASSWORD = 'ENTER_PASSWORD';\r\nexport const SET_TOKEN = 'SET_TOKEN';\r\n","import { combineReducers } from \"redux\";\r\nimport tokenReducer from './TokenReducer'\r\n\r\nexport default combineReducers({\r\n    token: tokenReducer\r\n})\r\n","import { SET_TOKEN } from \"../actions/Types\";\r\n\r\nexport default function (state = '', action) {\r\n    switch (action.type) {\r\n        case SET_TOKEN:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {applyMiddleware, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from './reducers/RootReducer'\r\n\r\nconst initialState = {};\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    applyMiddleware(thunk)\r\n);","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport Authorization from \"./components/Authorization\";\nimport UsersList from \"./components/UsersList\";\nimport { store } from './Store'\nimport '../src/resources/styles/Main.css'\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div\n                id='main-container'\n            >\n                <img\n                    src='../src/resources/img/logo.svg'\n                    alt='logo'\n                />\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}